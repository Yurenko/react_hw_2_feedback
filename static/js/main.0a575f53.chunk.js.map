{"version":3,"sources":["Feedback/Feedback.js","Statistics/Statistics.js","Notification/Notification.js","App.js","index.js","Statistics/Statistics.module.css","Feedback/Feedback.module.css"],"names":["Feedback","onLeaveFeedback","className","style","buttons","type","onClick","name","Statistics","good","neutral","bad","total","positivePercentage","statisticsItems","item","Notification","message","App","state","handleIncrement","e","target","setState","countTotalFeedback","countPositiveFeedbackPercentage","this","Component","propType","PropType","number","ReactDOM","render","document","getElementById","module","exports"],"mappings":"uNAoBeA,MAjBf,YAAwC,IAApBC,EAAmB,EAAnBA,gBAClB,OACE,sBAAKC,UAAWC,IAAMC,QAAtB,UACE,uDACA,wBAAQC,KAAK,SAASC,QAASL,EAAiBM,KAAK,OAArD,kBAGA,wBAAQF,KAAK,SAASC,QAASL,EAAiBM,KAAK,UAArD,sBAGA,wBAAQF,KAAK,SAASC,QAASL,EAAiBM,KAAK,MAArD,qB,gBCKSC,MAff,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,gCACE,4CACA,qBAAIX,UAAWC,IAAMW,gBAArB,UACE,qBAAIZ,UAAWC,IAAMY,KAArB,mBAAkCN,KAClC,qBAAIP,UAAWC,IAAMY,KAArB,uBAAsCL,KACtC,qBAAIR,UAAWC,IAAMY,KAArB,kBAAiCJ,KACjC,qBAAIT,UAAWC,IAAMY,KAArB,oBAAmCH,KACnC,qBAAIV,UAAWC,IAAMY,KAArB,gCAA+CF,YCPxCG,MAHf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,+BAAOA,KCIVC,E,4MACJC,MAAQ,CAAEV,KAAM,EAAGC,QAAS,EAAGC,IAAK,EAAGC,MAAO,EAAGC,mBAAoB,G,EAErEO,gBAAkB,SAAAC,GAChB,IAAQd,EAASc,EAAEC,OAAXf,KACR,EAAKgB,UAAS,SAAAJ,GAAK,sBAAQZ,EAAOY,EAAMZ,GAAQ,MAChD,EAAKiB,sB,EAGPA,mBAAqB,WACnB,EAAKD,UAAS,SAAAJ,GAAK,MAAK,CACtBP,MAAOO,EAAMV,KAAOU,EAAMT,QAAUS,EAAMR,QAE5C,EAAKc,mC,qEAGP,WACEC,KAAKH,UAAS,SAAAJ,GAAK,MAAK,CACtBN,oBACgB,IAAbM,EAAMV,KAA6B,GAAhBU,EAAMT,QAA2B,EAAZS,EAAMR,KAAWQ,EAAMP,Y,oBAItE,WACE,MAA0Dc,KAAKP,MAAvDV,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBAEnC,OACE,gCACE,cAAC,EAAD,CAAiBZ,gBAAiByB,KAAKN,kBAC9CR,EAAQ,cAAC,EAAD,CACCH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IACjB,cAAC,EAAD,CAAcI,QAAQ,6B,GAnCjBU,aA2ClBT,EAAIU,SAAW,CACbnB,KAAMoB,IAASC,OACfpB,QAASmB,IAASC,OAClBnB,IAAKkB,IAASC,OACdlB,MAAOiB,IAASC,OAChBjB,mBAAoBgB,IAASC,QAGhBZ,QCtDfa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,kBCHjDC,EAAOC,QAAU,CAAC,gBAAkB,oCAAoC,KAAO,2B,kBCA/ED,EAAOC,QAAU,CAAC,QAAU,6B","file":"static/js/main.0a575f53.chunk.js","sourcesContent":["import React from 'react';\nimport style from './Feedback.module.css';\n\nfunction Feedback({ onLeaveFeedback }) {\n  return (\n    <div className={style.buttons}>\n      <h1>Please leave feedback</h1>\n      <button type=\"submit\" onClick={onLeaveFeedback} name=\"good\">\n        Good\n      </button>\n      <button type=\"submit\" onClick={onLeaveFeedback} name=\"neutral\">\n        Neutural\n      </button>\n      <button type=\"submit\" onClick={onLeaveFeedback} name=\"bad\">\n        Bad\n      </button>\n    </div>\n  );\n}\n\nexport default Feedback;\n","import React from 'react';\nimport style from './Statistics.module.css';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <div>\n      <h1>Statistics</h1>\n      <ul className={style.statisticsItems}>\n        <li className={style.item}>Good: {good}</li>\n        <li className={style.item}>Neutural: {neutral}</li>\n        <li className={style.item}>Bad: {bad}</li>\n        <li className={style.item}>Total: {total}</li>\n        <li className={style.item}>Positive feedback: {positivePercentage}</li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Statistics;\n","import React from 'react';\n\nfunction Notification({ message }) {\n  return <span>{message}</span>;\n}\nexport default Notification;\n","import React, { Component } from 'react';\nimport PropType from 'prop-type';\n\nimport FeedbackOptions from './Feedback/Feedback';\nimport Statistics from './Statistics/Statistics';\nimport Notification from './Notification/Notification';\n\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0, total: 0, positivePercentage: 0 };\n\n  handleIncrement = e => {\n    const { name } = e.target;\n    this.setState(state => ({ [name]: state[name] + 1 }));\n    this.countTotalFeedback();\n  };\n\n  countTotalFeedback = () => {\n    this.setState(state => ({\n      total: state.good + state.neutral + state.bad,\n    }));\n    this.countPositiveFeedbackPercentage();\n  };\n\n  countPositiveFeedbackPercentage() {\n    this.setState(state => ({\n      positivePercentage:\n        (state.good * 100 + state.neutral * 50 + state.bad * 0) / state.total,\n    }));\n  }\n\n  render() {\n    const { good, neutral, bad, total, positivePercentage } = this.state;\n\n    return (\n      <div>\n        <FeedbackOptions onLeaveFeedback={this.handleIncrement} />\n{total ? <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={positivePercentage}\n        /> : <Notification message=\"No feedback given\"/>}\n        \n\n        \n      </div>\n    );\n  }\n}\nApp.propType = {\n  good: PropType.number,\n  neutral: PropType.number,\n  bad: PropType.number,\n  total: PropType.number,\n  positivePercentage: PropType.number,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsItems\":\"Statistics_statisticsItems__398wv\",\"item\":\"Statistics_item__2En17\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"Feedback_buttons__2n0Ft\"};"],"sourceRoot":""}